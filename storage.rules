rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Allow authenticated users to upload/read their own audio files
    match /audio/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to upload/read their own profile images
    match /profile_images/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Legacy audio_recordings path (if still needed)
    match /audio_recordings/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Folio: Avatar uploads - users can upload their own avatars, publicly readable
    match /avatars/{userId}/{allPaths=**} {
      allow read: if true; // Avatars are public
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Folio: Video uploads - users can upload their own videos
    match /uploads/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Folio: Video thumbnails - publicly readable
    match /thumbnails/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // Folio: Exports (invoices, contracts) - owner only
    match /exports/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
